# https://projecteuler.net/problem=45
"""
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
Triangle 	  	T[n]=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
Pentagonal 	  	P[n]=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
Hexagonal 	  	H[n]=n(2n−1) 	  	1, 6, 15, 28, 45, ...

It can be verified that T[285] = P[165] = H[143] = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""


import euler_lib.sequences as seq


if __name__ == "__main__":
    found = False

    i, j, k = 285+1, 165+1, 143+1

    pentagonal_nums = set()
    hexagonal_nums = set()

    while not found:
        T = seq.triangle(i)
        P = seq.pentagonal(j)
        H = seq.hexagonal(k)

        pentagonal_nums.add(P)
        hexagonal_nums.add(H)

        print(T,P,H)

        found = T in pentagonal_nums and T in hexagonal_nums
        i += 1
        j += 1
        k += 1

    print(f"solution = {T}")